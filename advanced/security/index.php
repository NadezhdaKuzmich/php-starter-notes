<?php

/*
Болі будь-якого сайту, на що звертаємо увагу:
- Безпека сесій
- Таблиці в Базі даних, управління користувачами і 
типи полів можуть бути слабким місцем у вашому проєкті
- SQL ін'єкції
- Шифрування
- Маскування PHP файлів під html 
- Паролі

Слабкі місця в Безпеці PHP:
- Крадіжка COOKIE юзерів
Авторизувавшись, браузер може віддати нам чужий кукі.

- Паролі та База Даних
Багато юзерів не придумують складний пароль.

- Права 777 на папки
Можна отримати доступ до директорій проекту.

- SQL вразливості
Проста підстановка за id, дає змогу читати Базу Даних.

- Впровадження JS коду
Браузер записуватиме все, що пише користувач.

Популярные методы взлома сайта:
- BackDoor
- SQL инъекции
- JS script
- XSS
- DDOS

Поради:
- Розширення дозволяють нам повторно використовувати 
бібліотеки для захисту сайту від атак.

- SQL ін'єкції застосовуються дуже часто. Запити до БД 
потрібно робити через bindParam.

- Пам'ятайте, що COOKIE також можуть бути метою, щоб 
легко підмінити авторизацію юзера.

- На сервері намагайтеся не використовувати права 777 
на папки. Замість цього краще ставити 775.

- Використовуйте let і const для змінних у JavaScript.

- Не існує ідеального алгоритму шифрування. Найкращий 
спосіб захисту це 2-3 алгоритму разом із Salt.
*/

// generate token and salt
function RandomToken($length)
{
  if (!isset($length) || intval($length) <= 8) {
    $length = 32;
  }
  if (function_exists('random_bytes')) {
    return bin2hex(random_bytes($length));
  }
  if (function_exists('openssl_random_pseudo_bytes')) {
    return bin2hex(openssl_random_pseudo_bytes($length));
  }
}

echo (RandomToken(32)) . '<hr>';

function Salt()
{
  return substr(strtr(base64_encode(hex2bin(RandomToken(32))), '+', '.'), 0, 44);
}

echo Salt();